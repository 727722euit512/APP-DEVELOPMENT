import './App.css';
import LoginPage from './LoginPage';
// import Header from './Header';
// import { BrowserRouter as Router,Route,Routes } from 'react-router-dom';
// import './login.css';
function App() {
  return (
    <div className="App">
    <LoginPage/>
    </div>
    
  );
}

export default App;
App.js




body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    font-family: Arial, sans-serif;
    background-image: url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDztQUowWEXtUyrwjZm9ADw_3ZtsqMiVL2g&usqp=CAU');
    background-repeat: no-repeat;
    background-size: 100%;
  }
  
  .login-page-container {
    width: 200px;
    background-color: #fff;
    padding: 400px;
    border-radius: 40px;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
  }
  .app {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
  
    background-size: cover;  
    background-repeat: no-repeat, repeat;
    background-position: center;
  }
  
  .login-page-container {
    width: 400px; 
    background-color: rgba(255, 255, 255, 0.8);
    padding: 40px;
    border-radius: 4px;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
  }
  
  
  
  .login-form h1 {
    font-size: 24px;
    text-align: center;
    margin-bottom: 30px;
    
    
  }
  
  .login-form .form-group {
    margin-bottom: 20px;
  }
  
  .login-form label {
    display: block;
    font-size: 14px;
    margin-bottom: 5px;
    padding: 100px;
  }
  
  .login-form input[type="text"],
  .login-form input[type="password"] {
    width: 400%;
    padding: 200px;
    font-size: 20px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  
  .login-form .login-btn {
    width: 400%;
    padding: 120px;
    font-size: 16px;
    background-color: #4CAF50;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  .login-form .login-btn:hover {
    background-color: #45a049;
  }
  
  .login-form .login-btn:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }
  
  .login-form .error-message {
    color: #ff0000;
    margin-top: 10px;
    font-size: 14px;
    text-align: center;
  } 
 Login.css



import React, { useState } from 'react';
import './login.css'; 

const LoginPage = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [email, setEmail] = useState('');
  const [isNewUser, setIsNewUser] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const handleUsernameChange = (e) => {
    setUsername(e.target.value);
  };

  const handlePasswordChange = (e) => {
    setPassword(e.target.value);
  };

  const handleEmailChange = (e) => {
    setEmail(e.target.value);
  };

  const handleSignIn = () => {
    if (username && password) {
      setIsLoggedIn(true);
      alert('Login successful!');
    } else {
      alert('Please enter a username and password.');
    }
  };

  const handleSignUp = () => {
    if (username && password && email) {
      setIsNewUser(false);
      setIsLoggedIn(true);
      alert('Sign-up successful! You are now logged in.');
    } else {
      alert('Please enter a username, password, and email.');
    }
  };

  if (isLoggedIn) {
    return <div>You are logged in!</div>;
  }

  return (
    <div className="login-page">
      <h2>{isNewUser ? 'Sign Up' : 'Login'}</h2>
      <form>
        <div>
          <label htmlFor="username">Username:</label>
          <input
            type="text"
            id="username"
            value={username}
            onChange={handleUsernameChange}
          />
        </div>
        <div>
          <label htmlFor="password">Password:</label>
          <input
            type="password"
            id="password"
            value={password}
            onChange={handlePasswordChange}
          />
        </div>
        {isNewUser && (
          <div>
            <label htmlFor="email">Email:</label>
            <input
              type="text"
              id="email"
              value={email}
              onChange={handleEmailChange}
            />
          </div>
        )}
        {isNewUser ? (
          <button type="button" onClick={handleSignUp}>Sign Up</button>
        ) : (
          <button type="button" onClick={handleSignIn}>Log In</button>
        )}
        <div>
          {isNewUser ? (
            <p>Already have an account? <button type="button" onClick={() => setIsNewUser(false)}>Log In</button></p>
          ) : (
            <p>Don't have an account? <button type="button" onClick={() => setIsNewUser(true)}>Sign Up</button></p>
          )}
        </div>
      </form>
    </div>
  );
};

export default LoginPage;
LoginPage.js
